apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: StatefulSet 
metadata:
  name: cn-deploy
  namespace: sset-5g-simulation
  labels:
    ngc-mode: cn
spec:
  replicas: 1
  serviceName: "cn-svc-pool"
  serviceName: "cn-node-pool"
  selector:
    matchLabels:
      ngc-mode: cn
  template:
    metadata:          
      labels:
        ngc-mode: cn
    spec:
      serviceAccountName: mongo
      automountServiceAccountToken: true
      #terminationGracePeriodSeconds: 60
      containers:
        - name: mongo
          image: oset-mongo-simple:v1.0
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            - '/bin/bash mongo_init.sh'
          ports:
            - name: mongo-com 
              containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /var/lib/mongodb
        - name: sset-cn
          image: sset-5g-uerancn:v1.0
          securityContext:
            privileged: true
            #sysctls:
            #- name: net.ipv6.conf.all.disable_ipv6
            #  value: 0
            capabilities:
              add: ["NET_ADMIN"]
          imagePullPolicy: IfNotPresent
          #imagePullPolicy: Always
          env:
            - name: IPV4_TUN_ADDR
              value: "100.45.0.1/16"
            - name: IPV6_TUN_ADDR
              value: "cafe::1/64"
            - name: DB_URI
              value: mongodb://localhost/open5gs
          command: ["/bin/sh", "-c"]
          args:
            - echo "CN starting";
              /bin/bash sset_5g_network.sh ${IPV4_TUN_ADDR} ${IPV6_TUN_ADDR};
              /bin/bash sset_5g_core_tools.sh 5gcDocker
          ports:
            - name: ngap 
              containerPort: 38412
              protocol: SCTP
            - name: gtp-u
              containerPort: 2152
              protocol: UDP            
          volumeMounts:
            - name: dev-net-tun
              mountPath: /dev/net/tun
            #- name: upf-entrypoint
            #  mountPath: /entrypoint.sh
            #  readOnly: true
            #  subPath: "entrypoint.sh"    
            ############################
            - name: nrf-config
              mountPath: /usr/local/install/SSET/cnf/5G/core/nrf.yaml
              subPath: "nrf.yaml"
            - name: upf-config
              mountPath: /usr/local/install/SSET/cnf/5G/core/upf.yaml
              subPath: "upf.yaml"  
            - name: smf-config
              mountPath: /usr/local/install/SSET/cnf/5G/core/smf.yaml
              subPath: "smf.yaml"
            - name: amf-config
              mountPath: /usr/local/install/SSET/cnf/5G/core/amf.yaml
              subPath: "amf.yaml"
            - name: ausf-config
              mountPath: /usr/local/install/SSET/cnf/5G/core/ausf.yaml
              subPath: "ausf.yaml"
            - name: udm-config
              mountPath: /usr/local/install/SSET/cnf/5G/core/udm.yaml
              subPath: "udm.yaml"
            - name: pcf-config
              mountPath: /usr/local/install/SSET/cnf/5G/core/pcf.yaml
              subPath: "pcf.yaml"
            - name: bsf-config
              mountPath: /usr/local/install/SSET/cnf/5G/core/bsf.yaml
              subPath: "bsf.yaml"
            - name: nssf-config
              mountPath: /usr/local/install/SSET/cnf/5G/core/nssf.yaml
              subPath: "nssf.yaml"
            - name: udr-config
              mountPath: /usr/local/install/SSET/cnf/5G/core/udr.yaml
              subPath: "udr.yaml"
        - name: webui
          image: oset-webui-simple:v1.0
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            - '/bin/bash webui_init.sh'
          ports:
            - name: webui-com 
              containerPort: 3000
          env:
            - name: DB_URI
              value: "mongodb://localhost/open5gs"            
      volumes:
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun
        #- name: upf-entrypoint
        #  configMap:
        #    name: cn-config
        #    defaultMode: 0700
        #    items:
        #    - key: entrypoint.sh
        #      path: entrypoint.sh
        ##############################
        - name: nrf-config
          configMap:
            name: cn-config    
            items:
            - key: nrf.yaml
              path: nrf.yaml
        - name: upf-config
          configMap:
            name: cn-config  
            items:
            - key: upf.yaml
              path: upf.yaml
        - name: smf-config
          configMap:
            name: cn-config    
            items:
            - key: smf.yaml
              path: smf.yaml
        - name: amf-config
          configMap:
            name: cn-config    
            items:
            - key: amf.yaml
              path: amf.yaml
        - name: ausf-config
          configMap:
            name: cn-config    
            items:
            - key: ausf.yaml
              path: ausf.yaml
        - name: udm-config
          configMap:
            name: cn-config    
            items:
            - key: udm.yaml
              path: udm.yaml
        - name: pcf-config
          configMap:
            name: cn-config    
            items:
            - key: pcf.yaml
              path: pcf.yaml
        - name: bsf-config
          configMap:
            name: cn-config    
            items:
            - key: bsf.yaml
              path: bsf.yaml
        - name: nssf-config
          configMap:
            name: cn-config    
            items:
            - key: nssf.yaml
              path: nssf.yaml
        - name: udr-config
          configMap:
            name: cn-config    
            items:
            - key: udr.yaml
              path: udr.yaml
        - name: mongo-persistent-storage
          emptyDir: {}
            #medium: Memory
            #sizeLimit: 100Mi
      #volumeClaimTemplates:
        #- metadata:
            #name: mongo-persistent-storage
          #spec:
            #accessModes: [ "ReadWriteOnce" ]
            #resources:
               #requests:
               #storage: 2Gi